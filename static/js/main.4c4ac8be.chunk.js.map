{"version":3,"sources":["main.js","App.js","reportWebVitals.js","index.js"],"names":["changeColor","a","chrome","storage","sync","set","color","tabs","query","active","currentWindow","r","executeScript","id","file","runtime","lastError","console","error","message","App","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAEO,SAAeA,IAAtB,+B,4CAAO,sBAAAC,EAAA,6DACLC,OAAOC,QAAQC,KAAKC,IAAI,CAACC,MAAO,YAAY,eADvC,SAKCJ,OAAOK,KAAKC,MAAM,CAACC,QAAQ,EAAMC,eAAe,IAElD,SAAAC,GACAT,OAAOK,KAAKK,cAAcD,EAAE,GAAGE,GAAK,CAACC,KAAM,6BAA6B,WACnEZ,OAAOa,QAAQC,WAChBC,QAAQC,MAAM,4BAA8BhB,OAAOa,QAAQC,UAAUG,eAVxE,4C,sBCaQC,MAZf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,wBAAQC,QAAStB,EAAjB,+BCKOuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4c4ac8be.chunk.js","sourcesContent":["/*global chrome*/\n\nexport async function changeColor() {\n  chrome.storage.sync.set({color: \"#3aa757\"}, ()=>{}/* { color }) => {\n    console.log(color)\n  } */  );\n\n  await chrome.tabs.query({active: true, currentWindow: true}, \n    (\n      r => {\n      chrome.tabs.executeScript(r[0].id , {file: 'scripts/changeBgColor.js'}, function() {\n        if(chrome.runtime.lastError) {\n          console.error(\"Script injection failed: \" + chrome.runtime.lastError.message);\n        }\n      })\n    }\n  ));\n  \n}","import './App.css';\nimport { changeColor } from './main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button onClick={changeColor}>\n          Change color\n        </button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}